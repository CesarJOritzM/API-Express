{"version":3,"sources":["../../../src/models/products/index.js"],"names":["typeDefs","gql","resolvers","Query","AllProducts","parent","args","Product","find","products","map","el","_id","findById","product","Mutation","CreateProduct","save"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;AAEA,IAAMA,QAAQ,OAAGC,wBAAH,+eAAd;;AA2BA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,WAAW;AAAA,uGAAE,iBAAOC,MAAP,EAAeC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuBC,gBAAAA,OAAvB,QAAuBA,OAAvB;AAAA;AAAA,uBACYA,OAAO,CAACC,IAAR,EADZ;;AAAA;AACLC,gBAAAA,QADK;AAAA,iDAEJA,QAAQ,CAACC,GAAT,CAAa,UAACC,EAAD,EAAQ;AAC1B,yBAAOA,EAAP;AACD,iBAFM,CAFI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OADN;AAOLJ,IAAAA,OAAO;AAAA,oGAAE,kBAAOF,MAAP,EAAeC,IAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAuBC,gBAAAA,QAAvB,SAAuBA,OAAvB;AACCK,gBAAAA,GADD,GACSN,IADT,CACCM,GADD;AAAA;AAAA,uBAEeL,QAAO,CAACM,QAAR,CAAiBD,GAAjB,CAFf;;AAAA;AAEDE,gBAAAA,OAFC;AAAA,kDAGAA,OAHA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAPF,GADS;AAchBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aAAa;AAAA,yGAAE,kBAAOX,MAAP,EAAeC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuBC,gBAAAA,OAAvB,SAAuBA,OAAvB;AAAA;AAAA,uBACS,IAAIA,OAAJ,CAAYD,IAAZ,EAAkBW,IAAlB,EADT;;AAAA;AACPH,gBAAAA,OADO;AAAA,kDAENA,OAFM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADL;AAdM,CAAlB","sourcesContent":["import { gql } from 'apollo-server-express';\n\nconst typeDefs = gql`\n  enum Status {\n    Avalible\n    Unavailable\n  }\n  type Product {\n    _id: ID!\n    name: String\n    description: String\n    status: String\n    price: Int\n  }\n\n  type Query {\n    AllProducts: [Product]!\n    Product(_id: ID!): Product\n  }\n\n  type Mutation {\n    CreateProduct(\n      name: String!\n      description: String!\n      status: Status!\n      price: Int!\n    ): Product\n  }\n`;\nconst resolvers = {\n  Query: {\n    AllProducts: async (parent, args, { Product }) => {\n      const products = await Product.find();\n      return products.map((el) => {\n        return el;\n      });\n    },\n    Product: async (parent, args, { Product }) => {\n      const { _id } = args;\n      const product = await Product.findById(_id);\n      return product;\n    },\n  },\n  Mutation: {\n    CreateProduct: async (parent, args, { Product }) => {\n      const product = await new Product(args).save();\n      return product;\n    },\n  },\n};\n\nexport { typeDefs, resolvers };\n"],"file":"index.js"}